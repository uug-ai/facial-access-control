definitions:
  models.Authentication:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Authorization:
    properties:
      code:
        type: integer
      expire:
        type: string
      role:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  models.Location:
    properties:
      address:
        type: string
      id:
        type: integer
      lat:
        type: number
      lng:
        type: number
      name:
        type: string
    type: object
  models.User:
    properties:
      id:
        type: integer
      installed:
        type: boolean
      language:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/locations:
    get:
      description: Get all locations
      operationId: getLocations
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Location'
            type: array
      summary: Get all locations
      tags:
      - locations
  /api/locations/{id}:
    get:
      description: Get location by ID
      operationId: getLocation
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Location'
      summary: Get location by ID
      tags:
      - locations
  /api/login:
    post:
      description: Get Authorization token.
      operationId: login
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.Authentication'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Authorization'
      summary: Get Authorization token.
      tags:
      - authentication
  /api/users:
    get:
      description: Get all users
      operationId: getUsers
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - users
  /api/users/{id}:
    get:
      description: Get user by id
      operationId: getUser
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user by id
      tags:
      - users
swagger: "2.0"
